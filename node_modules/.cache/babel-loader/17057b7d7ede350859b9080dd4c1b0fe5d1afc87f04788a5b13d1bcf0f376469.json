{"ast":null,"code":"var _jsxFileName = \"/Users/brooklynlanning/Desktop/Event Websites/the-bowens-wedding-site/src/modals/PhotoUploadModal/PhotoUploadModal.js\",\n  _s = $RefreshSig$();\n// src/modals/PhotoUploadModal/PhotoUploadModal.js\nimport React, { useState } from 'react';\nimport styles from './PhotoUploadModal.module.css';\n\n// A helper function to format file size\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatBytes = (bytes, decimals = 1) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\nconst PhotoUploadModal = ({\n  isOpen,\n  onClose,\n  onUploadSuccess\n}) => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]); // Array to hold multiple files\n  const [uploadStates, setUploadStates] = useState({}); // Stores progress, error, success for each file\n  const [isUploadingAll, setIsUploadingAll] = useState(false); // Track overall upload process\n  const [overallError, setOverallError] = useState(''); // General errors (e.g., if no files)\n  const [isSubmitted, setIsSubmitted] = useState(false); // NEW: State to track if submission is complete\n\n  const CLOUDINARY_CLOUD_NAME = 'dtmhmxqiw'; // Your Cloud Name\n  const CLOUDINARY_API_SECRET = 'r6aKTXY3tS9huouJ4bdTBB9qFOQ'; // Your API Secret (used by Netlify Function)\n  const CLOUDINARY_UPLOAD_PRESET = 'wedding_upload_preset'; // Your Unsigned Upload Preset (only if using direct upload, but included for context)\n\n  const addFiles = newFiles => {\n    const validFiles = Array.from(newFiles).filter(file => file.type.startsWith('image/'));\n    setSelectedFiles(prevFiles => {\n      const updatedFiles = [...prevFiles];\n      validFiles.forEach(newFile => {\n        // Only add if not already present by name/size to prevent duplicates\n        if (!updatedFiles.some(existingFile => existingFile.name === newFile.name && existingFile.size === newFile.size)) {\n          updatedFiles.push(newFile);\n        }\n      });\n      return updatedFiles;\n    });\n\n    // Initialize upload states for newly added files\n    setUploadStates(prevStates => {\n      const newUploadStates = {\n        ...prevStates\n      };\n      validFiles.forEach(file => {\n        if (!newUploadStates[file.name]) {\n          // Only initialize if it doesn't exist\n          newUploadStates[file.name] = {\n            progress: 0,\n            error: '',\n            success: false,\n            url: '',\n            previewUrl: URL.createObjectURL(file) // Generate preview URL\n          };\n        }\n      });\n      return newUploadStates;\n    });\n    setOverallError(''); // Clear overall error on new file add\n    setIsSubmitted(false); // Reset submitted state if new files are added\n  };\n  const handleFileChange = event => {\n    if (event.target.files) addFiles(event.target.files);\n    event.target.value = null; // Clear input so same file can be selected again\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    event.currentTarget.classList.remove(styles['drag-over']);\n    addFiles(event.dataTransfer.files);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    event.currentTarget.classList.add(styles['drag-over']);\n  };\n  const handleDragLeave = event => {\n    event.currentTarget.classList.remove(styles['drag-over']);\n  };\n  const removeFile = fileNameToRemove => {\n    setSelectedFiles(prev => {\n      var _uploadStates$fileNam;\n      const updatedFiles = prev.filter(file => file.name !== fileNameToRemove);\n      // If all files are removed after successful upload, reset isSubmitted\n      if (updatedFiles.length === 0 && (_uploadStates$fileNam = uploadStates[fileNameToRemove]) !== null && _uploadStates$fileNam !== void 0 && _uploadStates$fileNam.success) {\n        // Use fileNameToRemove here\n        setIsSubmitted(false);\n      }\n      return updatedFiles;\n    });\n    setUploadStates(prev => {\n      const newStates = {\n        ...prev\n      };\n      delete newStates[fileNameToRemove];\n      return newStates;\n    });\n    setOverallError('');\n  };\n  const handleUploadAll = async () => {\n    if (selectedFiles.length === 0) {\n      setOverallError('Please select at least one file to upload.');\n      return;\n    }\n    setIsUploadingAll(true);\n    setOverallError('');\n    const uploadedUrls = [];\n    let hasError = false;\n\n    // Loop through each selected file to upload\n    for (const file of selectedFiles) {\n      var _uploadStates$file$na, _uploadStates$file$na2;\n      // If file was already successfully uploaded in a previous batch, just add its URL\n      if ((_uploadStates$file$na = uploadStates[file.name]) !== null && _uploadStates$file$na !== void 0 && _uploadStates$file$na.success && (_uploadStates$file$na2 = uploadStates[file.name]) !== null && _uploadStates$file$na2 !== void 0 && _uploadStates$file$na2.url) {\n        uploadedUrls.push(uploadStates[file.name].url);\n        continue; // Skip to next file\n      }\n\n      // Reset state for current file being uploaded\n      setUploadStates(prev => ({\n        ...prev,\n        [file.name]: {\n          ...prev[file.name],\n          progress: 1,\n          error: '',\n          success: false\n        }\n      }));\n\n      // Convert file to base64 for sending to Netlify Function\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      await new Promise(resolve => {\n        // Use a Promise to wait for each file's upload\n        reader.onloadend = async () => {\n          const base64data = reader.result;\n          try {\n            // Send base64 data to Netlify Function endpoint\n            const response = await fetch('/.netlify/functions/upload-image', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                file: base64data\n              })\n            });\n            if (!response.ok) {\n              const errorData = await response.json();\n              throw new Error(errorData.message || 'Upload failed.');\n            }\n            const data = await response.json();\n            uploadedUrls.push(data.secure_url); // Collect URL\n            setUploadStates(prev => ({\n              ...prev,\n              [file.name]: {\n                ...prev[file.name],\n                progress: 100,\n                success: true,\n                url: data.secure_url\n              }\n            }));\n            console.log(`Successfully uploaded ${file.name}:`, data.secure_url);\n          } catch (error) {\n            console.error(`Error uploading ${file.name}:`, error);\n            setUploadStates(prev => ({\n              ...prev,\n              [file.name]: {\n                ...prev[file.name],\n                error: error.message || 'Failed',\n                success: false\n              }\n            }));\n            hasError = true;\n          } finally {\n            resolve(); // Resolve the promise to allow the loop to continue\n          }\n        };\n        reader.onerror = () => {\n          setUploadStates(prev => ({\n            ...prev,\n            [file.name]: {\n              ...prev[file.name],\n              error: 'Failed to read file.',\n              success: false\n            }\n          }));\n          hasError = true;\n          resolve();\n        };\n      });\n    }\n    setIsUploadingAll(false); // Overall upload finished\n    if (!hasError) {\n      // Pass ALL uploaded URLs (including any pre-existing successful ones) to parent\n      onUploadSuccess(uploadedUrls); // <-- CRUCIAL: Pass the collected URLs to HomePage\n      setOverallError('All photos uploaded successfully!');\n      // Don't clear selectedFiles or uploadStates here, keep previews visible\n    } else {\n      setOverallError('Some photos failed to upload. Please review errors above.');\n    }\n    setIsSubmitted(true); // NEW: Mark as submitted\n  };\n  const handleCloseModal = () => {\n    // Reset all states when modal is truly closed to ensure fresh start next time\n    setSelectedFiles([]);\n    setUploadStates({});\n    setIsSubmitted(false);\n    setOverallError('');\n    onClose(); // Call parent's onClose\n  };\n  if (!isOpen) return null;\n  const hasFilesSelected = selectedFiles.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `simple-modal ${isOpen ? 'show' : ''}`,\n    onClick: handleCloseModal,\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `simple-modal-content ${styles['photo-upload-modal-content']}`,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles['close-button'],\n        onClick: handleCloseModal,\n        disabled: isUploadingAll,\n        \"aria-label\": \"Close modal\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles['modal-title'],\n        children: \"Upload and attach files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles['modal-subtitle'],\n        children: \"Upload images to the project gallery.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles['upload-box']} ${styles['drag-drop-box']} ${overallError ? styles['has-error'] : ''}`,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/assets/images/cloud-computing.png`,\n          alt: \"Upload Cloud Icon\",\n          className: styles['cloud-upload-icon']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles['upload-text-container'],\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"photo-upload-input\",\n            className: styles['upload-clickable-text'],\n            children: \"Click to upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles['upload-static-text'],\n            children: \" or drag and drop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles['upload-hint'],\n          children: \"SVG, PNG, JPG or GIF (max. 800x400px)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/svg+xml,image/png,image/jpeg,image/gif\",\n          onChange: handleFileChange,\n          className: styles['file-input'],\n          id: \"photo-upload-input\",\n          multiple: true // Allow multiple file selection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), hasFilesSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['file-list-container'],\n        children: selectedFiles.map(file => {\n          const state = uploadStates[file.name] || {};\n          const isUploadingThisFile = isUploadingAll && !state.success && !state.error; // Track individual file upload state\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles['file-preview-item'],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles['file-icon-placeholder'],\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                className: \"w-6 h-6\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M19.5 9.75A.75.75 0 0118 9V6.75H6v2.25a.75.75 0 01-1.5 0V6A2.25 2.25 0 016 3.75h12A2.25 2.25 0 0120.25 6v3.75a.75.75 0 01-1.5 0zm-1.875 9.375a.75.75 0 010-1.5h.375a.75.75 0 010 1.5h-.375zm-.375 2.25a.75.75 0 010-1.5h.75a.75.75 0 010 1.5h-.75zM12 12.75a.75.75 0 01.75.75v6.75H18a.75.75 0 01.75.75v1.5a.75.75 0 01-.75.75H6a.75.75 0 01-.75-.75v-1.5a.75.75 0 01.75-.75h5.25v-6.75a.75.75 0 01.75-.75z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles['file-details'],\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles['file-name'],\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles['file-size'],\n                children: formatBytes(file.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles['file-status-area'],\n              children: [\" \", isUploadingThisFile && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles['upload-progress-text'],\n                  children: [state.progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles['progress-spinner']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 49\n                }, this), \" \"]\n              }, void 0, true), state.success && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles['upload-status'],\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  viewBox: \"0 0 24 24\",\n                  fill: \"currentColor\",\n                  className: styles['success-icon'],\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    fillRule: \"evenodd\",\n                    d: \"M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-3-3a.75.75 0 011.06-1.06l2.769 2.769 8.792-13.188a.75.75 0 011.04-.208z\",\n                    clipRule: \"evenodd\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 181\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 101\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 59\n              }, this), state.error && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles['error-message-inline'],\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 57\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 37\n            }, this), !isUploadingAll &&\n            /*#__PURE__*/\n            // Only show X if not currently uploading overall\n            _jsxDEV(\"button\", {\n              className: styles['remove-file-button'],\n              onClick: () => removeFile(file.name),\n              \"aria-label\": `Remove ${file.name}`,\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 16 16\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M5.28 4.22a.75.75 0 0 0-1.06 1.06L6.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L8 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L9.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L8 6.94 5.28 4.22Z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 125\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 41\n            }, this)]\n          }, file.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this), overallError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles['overall-error-message'],\n        children: overallError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['button-row'],\n        children: isSubmitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles['submission-success-message'],\n          children: [\"All photos uploaded to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: handleCloseModal,\n            className: styles['gallery-link'],\n            children: \"gallery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 56\n          }, this), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.button} ${styles.primary}`,\n          onClick: handleUploadAll,\n          disabled: selectedFiles.length === 0 || isUploadingAll,\n          children: [isUploadingAll ? 'Uploading...' : 'Submit', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n_s(PhotoUploadModal, \"bDFGG6G8vSaC03rVWz++GCBdiCE=\");\n_c = PhotoUploadModal;\nexport default PhotoUploadModal;\nvar _c;\n$RefreshReg$(_c, \"PhotoUploadModal\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","PhotoUploadModal","isOpen","onClose","onUploadSuccess","_s","selectedFiles","setSelectedFiles","uploadStates","setUploadStates","isUploadingAll","setIsUploadingAll","overallError","setOverallError","isSubmitted","setIsSubmitted","CLOUDINARY_CLOUD_NAME","CLOUDINARY_API_SECRET","CLOUDINARY_UPLOAD_PRESET","addFiles","newFiles","validFiles","Array","from","filter","file","type","startsWith","prevFiles","updatedFiles","forEach","newFile","some","existingFile","name","size","push","prevStates","newUploadStates","progress","error","success","url","previewUrl","URL","createObjectURL","handleFileChange","event","target","files","value","handleDrop","preventDefault","currentTarget","classList","remove","dataTransfer","handleDragOver","add","handleDragLeave","removeFile","fileNameToRemove","prev","_uploadStates$fileNam","length","newStates","handleUploadAll","uploadedUrls","hasError","_uploadStates$file$na","_uploadStates$file$na2","reader","FileReader","readAsDataURL","Promise","resolve","onloadend","base64data","result","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","secure_url","console","onerror","handleCloseModal","hasFilesSelected","className","onClick","role","children","e","stopPropagation","disabled","xmlns","viewBox","fill","fillRule","d","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","onDragLeave","src","process","env","PUBLIC_URL","alt","htmlFor","accept","onChange","id","multiple","map","state","isUploadingThisFile","href","button","primary","_c","$RefreshReg$"],"sources":["/Users/brooklynlanning/Desktop/Event Websites/the-bowens-wedding-site/src/modals/PhotoUploadModal/PhotoUploadModal.js"],"sourcesContent":["// src/modals/PhotoUploadModal/PhotoUploadModal.js\nimport React, { useState } from 'react';\nimport styles from './PhotoUploadModal.module.css';\n\n// A helper function to format file size\nconst formatBytes = (bytes, decimals = 1) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\n\nconst PhotoUploadModal = ({ isOpen, onClose, onUploadSuccess }) => {\n    const [selectedFiles, setSelectedFiles] = useState([]); // Array to hold multiple files\n    const [uploadStates, setUploadStates] = useState({}); // Stores progress, error, success for each file\n    const [isUploadingAll, setIsUploadingAll] = useState(false); // Track overall upload process\n    const [overallError, setOverallError] = useState(''); // General errors (e.g., if no files)\n    const [isSubmitted, setIsSubmitted] = useState(false); // NEW: State to track if submission is complete\n\n    const CLOUDINARY_CLOUD_NAME = 'dtmhmxqiw'; // Your Cloud Name\n    const CLOUDINARY_API_SECRET = 'r6aKTXY3tS9huouJ4bdTBB9qFOQ'; // Your API Secret (used by Netlify Function)\n    const CLOUDINARY_UPLOAD_PRESET = 'wedding_upload_preset'; // Your Unsigned Upload Preset (only if using direct upload, but included for context)\n\n    const addFiles = (newFiles) => {\n        const validFiles = Array.from(newFiles).filter(file => file.type.startsWith('image/'));\n        setSelectedFiles(prevFiles => {\n            const updatedFiles = [...prevFiles];\n            validFiles.forEach(newFile => {\n                // Only add if not already present by name/size to prevent duplicates\n                if (!updatedFiles.some(existingFile => existingFile.name === newFile.name && existingFile.size === newFile.size)) {\n                    updatedFiles.push(newFile);\n                }\n            });\n            return updatedFiles;\n        });\n\n        // Initialize upload states for newly added files\n        setUploadStates(prevStates => {\n            const newUploadStates = { ...prevStates };\n            validFiles.forEach(file => {\n                if (!newUploadStates[file.name]) { // Only initialize if it doesn't exist\n                    newUploadStates[file.name] = {\n                        progress: 0,\n                        error: '',\n                        success: false,\n                        url: '',\n                        previewUrl: URL.createObjectURL(file) // Generate preview URL\n                    };\n                }\n            });\n            return newUploadStates;\n        });\n        setOverallError(''); // Clear overall error on new file add\n        setIsSubmitted(false); // Reset submitted state if new files are added\n    };\n\n    const handleFileChange = (event) => {\n        if (event.target.files) addFiles(event.target.files);\n        event.target.value = null; // Clear input so same file can be selected again\n    };\n\n    const handleDrop = (event) => {\n        event.preventDefault();\n        event.currentTarget.classList.remove(styles['drag-over']);\n        addFiles(event.dataTransfer.files);\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n        event.currentTarget.classList.add(styles['drag-over']);\n    };\n\n    const handleDragLeave = (event) => {\n        event.currentTarget.classList.remove(styles['drag-over']);\n    };\n\n    const removeFile = (fileNameToRemove) => {\n        setSelectedFiles(prev => {\n            const updatedFiles = prev.filter(file => file.name !== fileNameToRemove);\n            // If all files are removed after successful upload, reset isSubmitted\n            if (updatedFiles.length === 0 && uploadStates[fileNameToRemove]?.success) { // Use fileNameToRemove here\n                setIsSubmitted(false);\n            }\n            return updatedFiles;\n        });\n        setUploadStates(prev => {\n            const newStates = { ...prev };\n            delete newStates[fileNameToRemove];\n            return newStates;\n        });\n        setOverallError('');\n    };\n\n    const handleUploadAll = async () => {\n        if (selectedFiles.length === 0) {\n            setOverallError('Please select at least one file to upload.');\n            return;\n        }\n\n        setIsUploadingAll(true);\n        setOverallError('');\n        const uploadedUrls = [];\n        let hasError = false;\n\n        // Loop through each selected file to upload\n        for (const file of selectedFiles) {\n            // If file was already successfully uploaded in a previous batch, just add its URL\n            if (uploadStates[file.name]?.success && uploadStates[file.name]?.url) {\n                uploadedUrls.push(uploadStates[file.name].url);\n                continue; // Skip to next file\n            }\n\n            // Reset state for current file being uploaded\n            setUploadStates(prev => ({\n                ...prev,\n                [file.name]: { ...prev[file.name], progress: 1, error: '', success: false }\n            }));\n\n            // Convert file to base64 for sending to Netlify Function\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n\n            await new Promise(resolve => { // Use a Promise to wait for each file's upload\n                reader.onloadend = async () => {\n                    const base64data = reader.result;\n\n                    try {\n                        // Send base64 data to Netlify Function endpoint\n                        const response = await fetch('/.netlify/functions/upload-image', {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({ file: base64data }),\n                        });\n\n                        if (!response.ok) {\n                            const errorData = await response.json();\n                            throw new Error(errorData.message || 'Upload failed.');\n                        }\n\n                        const data = await response.json();\n                        uploadedUrls.push(data.secure_url); // Collect URL\n                        setUploadStates(prev => ({ ...prev, [file.name]: { ...prev[file.name], progress: 100, success: true, url: data.secure_url } }));\n                        console.log(`Successfully uploaded ${file.name}:`, data.secure_url);\n\n                    } catch (error) {\n                        console.error(`Error uploading ${file.name}:`, error);\n                        setUploadStates(prev => ({ ...prev, [file.name]: { ...prev[file.name], error: error.message || 'Failed', success: false } }));\n                        hasError = true;\n                    } finally {\n                        resolve(); // Resolve the promise to allow the loop to continue\n                    }\n                };\n                reader.onerror = () => {\n                    setUploadStates(prev => ({ ...prev, [file.name]: { ...prev[file.name], error: 'Failed to read file.', success: false } }));\n                    hasError = true;\n                    resolve();\n                };\n            });\n        }\n\n        setIsUploadingAll(false); // Overall upload finished\n        if (!hasError) {\n            // Pass ALL uploaded URLs (including any pre-existing successful ones) to parent\n            onUploadSuccess(uploadedUrls); // <-- CRUCIAL: Pass the collected URLs to HomePage\n            setOverallError('All photos uploaded successfully!');\n            // Don't clear selectedFiles or uploadStates here, keep previews visible\n        } else {\n            setOverallError('Some photos failed to upload. Please review errors above.');\n        }\n        setIsSubmitted(true); // NEW: Mark as submitted\n    };\n\n    const handleCloseModal = () => {\n        // Reset all states when modal is truly closed to ensure fresh start next time\n        setSelectedFiles([]);\n        setUploadStates({});\n        setIsSubmitted(false);\n        setOverallError('');\n        onClose(); // Call parent's onClose\n    };\n    \n    if (!isOpen) return null;\n\n    const hasFilesSelected = selectedFiles.length > 0;\n\n    return (\n        <div className={`simple-modal ${isOpen ? 'show' : ''}`} onClick={handleCloseModal} role=\"dialog\" aria-modal=\"true\">\n            <div className={`simple-modal-content ${styles['photo-upload-modal-content']}`} onClick={e => e.stopPropagation()}>\n                {/* Close Button (X icon) */}\n                <button className={styles['close-button']} onClick={handleCloseModal} disabled={isUploadingAll} aria-label=\"Close modal\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z\" clipRule=\"evenodd\" />\n                    </svg>\n                </button>\n\n                <h2 className={styles['modal-title']}>Upload and attach files</h2>\n                <p className={styles['modal-subtitle']}>Upload images to the project gallery.</p>\n                \n                {/* Always visible Upload Box / Drag-and-Drop Area */}\n                <div\n                    className={`${styles['upload-box']} ${styles['drag-drop-box']} ${overallError ? styles['has-error'] : ''}`}\n                    onDrop={handleDrop}\n                    onDragOver={handleDragOver}\n                    onDragLeave={handleDragLeave}\n                >\n                    <img src={`${process.env.PUBLIC_URL}/assets/images/cloud-computing.png`} alt=\"Upload Cloud Icon\" className={styles['cloud-upload-icon']} />\n                    {/* Combined text for \"Click to upload or drag and drop\" */}\n                    <p className={styles['upload-text-container']}>\n                        <label htmlFor=\"photo-upload-input\" className={styles['upload-clickable-text']}>\n                            Click to upload\n                        </label>\n                        <span className={styles['upload-static-text']}> or drag and drop</span>\n                    </p>\n                    <span className={styles['upload-hint']}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                    <input\n                        type=\"file\"\n                        accept=\"image/svg+xml,image/png,image/jpeg,image/gif\"\n                        onChange={handleFileChange}\n                        className={styles['file-input']}\n                        id=\"photo-upload-input\"\n                        multiple // Allow multiple file selection\n                    />\n                </div>\n\n                {/* Display File List if files are selected */}\n                {hasFilesSelected && (\n                    <div className={styles['file-list-container']}>\n                        {selectedFiles.map((file) => {\n                            const state = uploadStates[file.name] || {};\n                            const isUploadingThisFile = isUploadingAll && !state.success && !state.error; // Track individual file upload state\n\n                            return (\n                                <div key={file.name} className={styles['file-preview-item']}>\n                                    <div className={styles['file-icon-placeholder']}> {/* File type icon placeholder */}\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-6 h-6\">\n                                            <path fillRule=\"evenodd\" d=\"M19.5 9.75A.75.75 0 0118 9V6.75H6v2.25a.75.75 0 01-1.5 0V6A2.25 2.25 0 016 3.75h12A2.25 2.25 0 0120.25 6v3.75a.75.75 0 01-1.5 0zm-1.875 9.375a.75.75 0 010-1.5h.375a.75.75 0 010 1.5h-.375zm-.375 2.25a.75.75 0 010-1.5h.75a.75.75 0 010 1.5h-.75zM12 12.75a.75.75 0 01.75.75v6.75H18a.75.75 0 01.75.75v1.5a.75.75 0 01-.75.75H6a.75.75 0 01-.75-.75v-1.5a.75.75 0 01.75-.75h5.25v-6.75a.75.75 0 01.75-.75z\" clipRule=\"evenodd\" />\n                                        </svg>\n                                    </div>\n                                    <div className={styles['file-details']}>\n                                        <p className={styles['file-name']}>{file.name}</p>\n                                        <span className={styles['file-size']}>{formatBytes(file.size)}</span>\n                                    </div>\n                                    \n                                    <div className={styles['file-status-area']}> {/* Container for status elements */}\n                                        {isUploadingThisFile && (\n                                            <>\n                                                <span className={styles['upload-progress-text']}>{state.progress}%</span>\n                                                <div className={styles['progress-spinner']}></div> {/* Spinner */}\n                                            </>\n                                        )}\n                                        {state.success && <span className={styles['upload-status']}><svg viewBox=\"0 0 24 24\" fill=\"currentColor\" className={styles['success-icon']}><path fillRule=\"evenodd\" d=\"M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-3-3a.75.75 0 011.06-1.06l2.769 2.769 8.792-13.188a.75.75 0 011.04-.208z\" clipRule=\"evenodd\" /></svg></span>}\n                                        {state.error && <span className={styles['error-message-inline']}>Error</span>} {/* Inline error */}\n                                    </div>\n                                    \n                                    {!isUploadingAll && ( // Only show X if not currently uploading overall\n                                        <button className={styles['remove-file-button']} onClick={() => removeFile(file.name)} aria-label={`Remove ${file.name}`}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\"><path d=\"M5.28 4.22a.75.75 0 0 0-1.06 1.06L6.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L8 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L9.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L8 6.94 5.28 4.22Z\" /></svg>\n                                        </button>\n                                    )}\n                                </div>\n                            );\n                        })}\n                    </div>\n                )}\n\n                {overallError && <p className={styles['overall-error-message']}>{overallError}</p>}\n\n                {/* Main Action Buttons */}\n                <div className={styles['button-row']}>\n                    {isSubmitted ? (\n                        <p className={styles['submission-success-message']}>\n                            All photos uploaded to the <a href=\"#\" onClick={handleCloseModal} className={styles['gallery-link']}>gallery</a>!\n                        </p>\n                    ) : (\n                        <button\n                            className={`${styles.button} ${styles.primary}`}\n                            onClick={handleUploadAll}\n                            disabled={selectedFiles.length === 0 || isUploadingAll}\n                        >\n                            {isUploadingAll ? 'Uploading...' : 'Submit'} {/* CHANGED: 'Upload All' to 'Submit' */}\n                        </button>\n                    )}\n                    {/* Removed the 'Done' button */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PhotoUploadModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}